import requests
import pytest


class TestUserAgent:
    headers = [
        ('Mozilla/5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build/ICL53F) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30'),
        ('Mozilla/5.0 (iPad; CPU OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/91.0.4472.77 Mobile/15E148 Safari/604.1'),
        ('Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)'),
        ('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36 Edg/91.0.100.0'),
        ('Mozilla/5.0 (iPad; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1'),
    ]

    @pytest.mark.parametrize('user_ag', headers)
    def test_user_agent(self, user_ag):
        response = requests.get("https://playground.learnqa.ru/ajax/api/user_agent_check",
                                headers={"User-Agent": user_ag})
        print(response.json())
        assert 'platform' in response.json(), f"Поля platform нет в ответе от сервера"
        assert 'browser' in response.json(), f"Поля browser нет в ответе от сервера"
        assert 'device' in response.json(), f"Поля device нет в ответе от сервера"
        response_platform = response.json()['platform']
        response_browser = response.json()['browser']
        response_device = response.json()['device']

        # # print(response_platform, response_browser, response_device)
        #
        expected_value = [{'platform': 'Mobile', 'browser': 'No', 'device': 'Android'},
                          {'platform': 'Mobile', 'browser': 'Chrome', 'device': 'iOS'},
                          {'platform': 'Googlebot', 'browser': 'Unknown', 'device': 'Unknown'},
                          {'platform': 'Web', 'browser': 'Chrome', 'device': 'No'},
                          {'platform': 'Mobile', 'browser': 'No', 'device': 'iPhone'}]

        for value in (expected_value):
            assert value['platform'] == response_platform, "Ожидаемая платформа не совпадает с полученной"
            assert value['browser'] == response_browser, "Ожидаемый браузер не совпадает с полученным"
            assert value['device'] == response_device, "Ожидаемый девайс не совпадает с полученным"
